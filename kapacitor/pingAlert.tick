// {alert_name}

// metric: {alert_metric}
// available_fields: [[other_telegraf_fields]]

// TELEGRAF CONFIGURATION
// [inputs.{plugin}]
//   # full configuration

// DEFINE: kapacitor define {alert_name} -type batch -tick {plugin}/{alert_name}.tick -dbrptelegraf.autogen
// ENABLE: kapacitor enable {alert_name}

// Parameters
var info = 5
var warn = 500
var crit = 800
var infoSig = 50
var warnSig = 100
var critSig = 100
var period = 10s
var every = 10s


// Dataframe
//var data = stream
  //|from()
    //.measurement('ping')
    //.groupBy('host')
//  |window()
    //.period(period)
   // .every(every)
//  |mean('average_response_ms')
  //  .as('stat')
    
var data = batch
    |query('''
        SELECT mean(average_response_ms) AS stat
        FROM "telegraf"."autogen"."ping"
    ''')
        .period(period)
        .every(every)
        .groupBy('host')


// Thresholds
var alert = data
  |eval(lambda: sigma("stat"))
    .as('sigma')
    .keep()
  |alert()
    .id('{{ index .Tags "host"}} ping is high :')
    .message('{{ .Level }} {{ .ID }}:{{ index .Fields "stat" }}')
    .info(lambda: "stat" > info OR "sigma" > infoSig)
    .warn(lambda: "stat" > warn OR "sigma" > warnSig)
    .crit(lambda: "stat" > crit OR "sigma" > critSig)

// Alert
alert
  .log('/tmp/ping_log.txt')
